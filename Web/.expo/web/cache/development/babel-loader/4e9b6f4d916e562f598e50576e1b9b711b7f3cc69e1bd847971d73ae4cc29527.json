{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { fetchHistoricalData } from \"../utils/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HistoryScreen = function HistoryScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    historicalData = _useState2[0],\n    setHistoricalData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var getHistoricalData = function getHistoricalData() {\n      var data, _t;\n      return _regeneratorRuntime.async(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 1;\n            return _regeneratorRuntime.awrap(fetchHistoricalData());\n          case 1:\n            data = _context.sent;\n            setHistoricalData(data);\n            _context.next = 3;\n            break;\n          case 2:\n            _context.prev = 2;\n            _t = _context[\"catch\"](0);\n            console.error(\"Error fetching historical data:\", _t);\n          case 3:\n            _context.prev = 3;\n            setLoading(false);\n            return _context.finish(3);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 2, 3, 4]], Promise);\n    };\n    getHistoricalData();\n  }, []);\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        style: styles.date,\n        children: item.date\n      }), _jsxs(Text, {\n        style: styles.duration,\n        children: [\"Sunlight Duration: \", item.duration, \" hours\"]\n      })]\n    });\n  };\n  if (loading) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    });\n  }\n  return _jsx(FlatList, {\n    data: historicalData,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.date;\n    },\n    contentContainerStyle: styles.container\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  item: {\n    marginBottom: 12,\n    padding: 16,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2\n  },\n  date: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  duration: {\n    fontSize: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default HistoryScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","fetchHistoricalData","jsx","_jsx","jsxs","_jsxs","HistoryScreen","_useState","_useState2","_slicedToArray","historicalData","setHistoricalData","_useState3","_useState4","loading","setLoading","getHistoricalData","data","_t","_regeneratorRuntime","async","_context","prev","next","awrap","sent","console","error","finish","stop","Promise","renderItem","_ref","item","style","styles","children","date","duration","loadingContainer","keyExtractor","contentContainerStyle","container","create","padding","marginBottom","backgroundColor","borderRadius","shadowColor","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","flex","justifyContent","alignItems"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/screens/HistoryScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, StyleSheet } from 'react-native';\nimport { fetchHistoricalData } from '../utils/api';\n\nconst HistoryScreen = () => {\n  const [historicalData, setHistoricalData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getHistoricalData = async () => {\n      try {\n        const data = await fetchHistoricalData();\n        setHistoricalData(data);\n      } catch (error) {\n        console.error(\"Error fetching historical data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHistoricalData();\n  }, []);\n\n  const renderItem = ({ item }) => (\n    <View style={styles.item}>\n      <Text style={styles.date}>{item.date}</Text>\n      <Text style={styles.duration}>Sunlight Duration: {item.duration} hours</Text>\n    </View>\n  );\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <FlatList\n      data={historicalData}\n      renderItem={renderItem}\n      keyExtractor={(item) => item.date}\n      contentContainerStyle={styles.container}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 12,\n    padding: 16,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  date: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  duration: {\n    fontSize: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default HistoryScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}