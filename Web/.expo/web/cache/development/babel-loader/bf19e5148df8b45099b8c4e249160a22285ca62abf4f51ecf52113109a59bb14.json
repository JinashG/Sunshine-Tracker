{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LineChart as RNLineChart } from \"react-native-chart-kit\";\nimport styles from \"./styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReLineChart, ReLine, ReXAxis, ReYAxis, ReTooltip, ReCartesianGrid, ReResponsiveContainer;\nif (Platform.OS === \"web\") {\n  var Recharts = require(\"recharts\");\n  ReLineChart = Recharts.LineChart;\n  ReLine = Recharts.Line;\n  ReXAxis = Recharts.XAxis;\n  ReYAxis = Recharts.YAxis;\n  ReTooltip = Recharts.Tooltip;\n  ReCartesianGrid = Recharts.CartesianGrid;\n  ReResponsiveContainer = Recharts.ResponsiveContainer;\n}\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/sunshine\").then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setData(json.sunshine);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var avg = data.length ? (data.reduce(function (a, b) {\n    return a + b.hours;\n  }, 0) / data.length).toFixed(1) : 0;\n  var max = data.length ? Math.max.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  var min = data.length ? Math.min.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sunshine Duration\"\n    }), data.length > 0 ? Platform.OS === \"web\" ? _jsx(View, {\n      style: {\n        height: 300,\n        width: \"100%\"\n      },\n      children: _jsx(ReResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: _jsxs(ReLineChart, {\n          data: data,\n          margin: {\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [_jsx(ReCartesianGrid, {\n            stroke: \"#e5e7eb\"\n          }), _jsx(ReXAxis, {\n            dataKey: \"date\"\n          }), _jsx(ReYAxis, {}), _jsx(ReTooltip, {}), _jsx(ReLine, {\n            type: \"monotone\",\n            dataKey: \"hours\",\n            stroke: \"#f59e0b\",\n            strokeWidth: 2\n          })]\n        })\n      })\n    }) : _jsx(RNLineChart, {\n      data: {\n        labels: data.map(function (d) {\n          return d.date.slice(5);\n        }),\n        datasets: [{\n          data: data.map(function (d) {\n            return d.hours;\n          })\n        }]\n      },\n      width: Dimensions.get(\"window\").width - 32,\n      height: 220,\n      yAxisSuffix: \"h\",\n      chartConfig: {\n        backgroundColor: \"#fff\",\n        backgroundGradientFrom: \"#fff\",\n        backgroundGradientTo: \"#fff\",\n        decimalPlaces: 1,\n        color: function color() {\n          return \"#f59e0b\";\n        },\n        labelColor: function labelColor() {\n          return \"#64748B\";\n        }\n      },\n      bezier: true,\n      style: styles.chart\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    }), _jsxs(View, {\n      style: styles.insights,\n      children: [_jsxs(Text, {\n        style: styles.pill,\n        children: [\"Avg: \", avg, \"h\"]\n      }), _jsxs(Text, {\n        style: styles.pill,\n        children: [\"Max: \", max, \"h\"]\n      }), _jsxs(Text, {\n        style: styles.pill,\n        children: [\"Min: \", min, \"h\"]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","Text","ScrollView","Dimensions","Platform","LineChart","RNLineChart","styles","jsx","_jsx","jsxs","_jsxs","ReLineChart","ReLine","ReXAxis","ReYAxis","ReTooltip","ReCartesianGrid","ReResponsiveContainer","OS","Recharts","require","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","App","_useState","_useState2","_slicedToArray","data","setData","fetch","then","res","json","sunshine","catch","err","console","log","avg","length","reduce","a","b","hours","toFixed","max","Math","apply","_toConsumableArray","map","d","min","style","container","children","title","height","width","margin","top","right","bottom","left","stroke","dataKey","type","strokeWidth","labels","date","slice","datasets","get","yAxisSuffix","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","labelColor","bezier","chart","insights","pill"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { View, Text, ScrollView, Dimensions, Platform } from \"react-native\";\nimport { LineChart as RNLineChart } from \"react-native-chart-kit\";\nimport styles from \"./styles\";\n\n// Import recharts components only for web\nlet ReLineChart, ReLine, ReXAxis, ReYAxis, ReTooltip, ReCartesianGrid, ReResponsiveContainer;\nif (Platform.OS === \"web\") {\n  const Recharts = require(\"recharts\");\n  ReLineChart = Recharts.LineChart;\n  ReLine = Recharts.Line;\n  ReXAxis = Recharts.XAxis;\n  ReYAxis = Recharts.YAxis;\n  ReTooltip = Recharts.Tooltip;\n  ReCartesianGrid = Recharts.CartesianGrid;\n  ReResponsiveContainer = Recharts.ResponsiveContainer;\n}\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/sunshine\") // ⚠️ replace with your PC IP for phone testing\n      .then((res) => res.json())\n      .then((json) => setData(json.sunshine))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const avg = data.length ? (data.reduce((a, b) => a + b.hours, 0) / data.length).toFixed(1) : 0;\n  const max = data.length ? Math.max(...data.map((d) => d.hours)) : 0;\n  const min = data.length ? Math.min(...data.map((d) => d.hours)) : 0;\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.title}>Sunshine Duration</Text>\n\n      {data.length > 0 ? (\n        Platform.OS === \"web\" ? (\n          <View style={{ height: 300, width: \"100%\" }}>\n            <ReResponsiveContainer width=\"100%\" height=\"100%\">\n              <ReLineChart data={data} margin={{ top: 20, right: 20, bottom: 20, left: 0 }}>\n                <ReCartesianGrid stroke=\"#e5e7eb\" />\n                <ReXAxis dataKey=\"date\" />\n                <ReYAxis />\n                <ReTooltip />\n                <ReLine type=\"monotone\" dataKey=\"hours\" stroke=\"#f59e0b\" strokeWidth={2} />\n              </ReLineChart>\n            </ReResponsiveContainer>\n          </View>\n        ) : (\n          <RNLineChart\n            data={{\n              labels: data.map((d) => d.date.slice(5)),\n              datasets: [{ data: data.map((d) => d.hours) }],\n            }}\n            width={Dimensions.get(\"window\").width - 32}\n            height={220}\n            yAxisSuffix=\"h\"\n            chartConfig={{\n              backgroundColor: \"#fff\",\n              backgroundGradientFrom: \"#fff\",\n              backgroundGradientTo: \"#fff\",\n              decimalPlaces: 1,\n              color: () => `#f59e0b`,\n              labelColor: () => \"#64748B\",\n            }}\n            bezier\n            style={styles.chart}\n          />\n        )\n      ) : (\n        <Text>Loading...</Text>\n      )}\n\n      <View style={styles.insights}>\n        <Text style={styles.pill}>Avg: {avg}h</Text>\n        <Text style={styles.pill}>Max: {max}h</Text>\n        <Text style={styles.pill}>Min: {min}h</Text>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}