{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/sunshine\").then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setData(json.sunshine);\n    }).catch(function (err) {\n      return console.log(\"Fetch error:\", err);\n    });\n  }, []);\n  var avg = data.length ? (data.reduce(function (a, b) {\n    return a + b.hours;\n  }, 0) / data.length).toFixed(1) : 0;\n  var max = data.length ? Math.max.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  var min = data.length ? Math.min.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  var pieData = [];\n  if (data.length >= 14) {\n    var lastWeek = data.slice(0, 7);\n    var thisWeek = data.slice(7, 14);\n    var lastAvg = (lastWeek.reduce(function (a, b) {\n      return a + b.hours;\n    }, 0) / lastWeek.length).toFixed(1);\n    var thisAvg = (thisWeek.reduce(function (a, b) {\n      return a + b.hours;\n    }, 0) / thisWeek.length).toFixed(1);\n    pieData = [{\n      name: \"Last Week\",\n      value: parseFloat(lastAvg)\n    }, {\n      name: \"This Week\",\n      value: parseFloat(thisAvg)\n    }];\n  }\n  var COLORS = [\"#60a5fa\", \"#f59e0b\"];\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 12\n      },\n      children: \"Sunshine Duration (Web)\"\n    }), _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: 300\n      },\n      children: _jsx(ResponsiveContainer, {\n        children: _jsxs(LineChart, {\n          data: data,\n          children: [_jsx(CartesianGrid, {\n            stroke: \"#e5e7eb\"\n          }), _jsx(XAxis, {\n            dataKey: \"date\"\n          }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, {\n            type: \"monotone\",\n            dataKey: \"hours\",\n            stroke: \"#f59e0b\",\n            strokeWidth: 2\n          })]\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 20,\n        gap: 12\n      },\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          padding: 12,\n          backgroundColor: \"#fef3c7\",\n          borderRadius: 12\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: \"Avg\"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          children: [avg, \"h\"]\n        })]\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          padding: 12,\n          backgroundColor: \"#d1fae5\",\n          borderRadius: 12\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: \"Max\"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          children: [max, \"h\"]\n        })]\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          padding: 12,\n          backgroundColor: \"#fee2e2\",\n          borderRadius: 12\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: \"Min\"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          children: [min, \"h\"]\n        })]\n      })]\n    }), pieData.length > 0 && _jsx(View, {\n      style: {\n        marginTop: 40,\n        width: \"100%\",\n        height: 300\n      },\n      children: _jsx(ResponsiveContainer, {\n        children: _jsxs(PieChart, {\n          children: [_jsx(Pie, {\n            data: pieData,\n            dataKey: \"value\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 100,\n            label: true,\n            children: pieData.map(function (entry, index) {\n              return _jsx(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, \"cell-\" + index);\n            })\n          }), _jsx(Tooltip, {}), _jsx(Legend, {})]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","Text","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Cell","Legend","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","data","setData","fetch","then","res","json","sunshine","catch","err","console","log","avg","length","reduce","a","b","hours","toFixed","max","Math","apply","_toConsumableArray","map","d","min","pieData","lastWeek","slice","thisWeek","lastAvg","thisAvg","name","value","parseFloat","COLORS","style","flex","padding","children","fontSize","marginBottom","width","height","stroke","dataKey","type","strokeWidth","flexDirection","marginTop","gap","backgroundColor","borderRadius","fontWeight","cx","cy","outerRadius","label","entry","index","fill"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  PieChart,\n  Pie,\n  Cell,\n  Legend\n} from \"recharts\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/sunshine\")\n      .then((res) => res.json())\n      .then((json) => setData(json.sunshine))\n      .catch((err) => console.log(\"Fetch error:\", err));\n  }, []);\n\n  // ---- Insights ----\n  const avg = data.length ? (data.reduce((a, b) => a + b.hours, 0) / data.length).toFixed(1) : 0;\n  const max = data.length ? Math.max(...data.map((d) => d.hours)) : 0;\n  const min = data.length ? Math.min(...data.map((d) => d.hours)) : 0;\n\n  // ---- Historical trend (last week vs this week avg) ----\n  let pieData = [];\n  if (data.length >= 14) {\n    const lastWeek = data.slice(0, 7);\n    const thisWeek = data.slice(7, 14);\n\n    const lastAvg = (lastWeek.reduce((a, b) => a + b.hours, 0) / lastWeek.length).toFixed(1);\n    const thisAvg = (thisWeek.reduce((a, b) => a + b.hours, 0) / thisWeek.length).toFixed(1);\n\n    pieData = [\n      { name: \"Last Week\", value: parseFloat(lastAvg) },\n      { name: \"This Week\", value: parseFloat(thisAvg) }\n    ];\n  }\n\n  const COLORS = [\"#60a5fa\", \"#f59e0b\"];\n\n  return (\n    <View style={{ flex: 1, padding: 20 }}>\n      <Text style={{ fontSize: 24, marginBottom: 12 }}>Sunshine Duration (Web)</Text>\n\n      {/* Line chart */}\n      <View style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart data={data}>\n            <CartesianGrid stroke=\"#e5e7eb\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"hours\" stroke=\"#f59e0b\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      </View>\n\n      {/* Insights */}\n      <View style={{ flexDirection: \"row\", marginTop: 20, gap: 12 }}>\n        <View style={{ flex: 1, padding: 12, backgroundColor: \"#fef3c7\", borderRadius: 12 }}>\n          <Text style={{ fontSize: 16 }}>Avg</Text>\n          <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>{avg}h</Text>\n        </View>\n        <View style={{ flex: 1, padding: 12, backgroundColor: \"#d1fae5\", borderRadius: 12 }}>\n          <Text style={{ fontSize: 16 }}>Max</Text>\n          <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>{max}h</Text>\n        </View>\n        <View style={{ flex: 1, padding: 12, backgroundColor: \"#fee2e2\", borderRadius: 12 }}>\n          <Text style={{ fontSize: 16 }}>Min</Text>\n          <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>{min}h</Text>\n        </View>\n      </View>\n\n      {/* Historical Trend Pie Chart */}\n      {pieData.length > 0 && (\n        <View style={{ marginTop: 40, width: \"100%\", height: 300 }}>\n          <ResponsiveContainer>\n            <PieChart>\n              <Pie data={pieData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={100} label>\n                {pieData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </View>\n      )}\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}