{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Cell, Legend } from \"recharts\";\nimport styles from \"./styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/sunshine\").then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setData(json.sunshine);\n    }).catch(function (err) {\n      return console.log(\"Fetch error:\", err);\n    });\n  }, []);\n  var avg = data.length ? (data.reduce(function (a, b) {\n    return a + b.hours;\n  }, 0) / data.length).toFixed(1) : 0;\n  var max = data.length ? Math.max.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  var min = data.length ? Math.min.apply(Math, _toConsumableArray(data.map(function (d) {\n    return d.hours;\n  }))) : 0;\n  var pieData = [];\n  if (data.length > 3) {\n    var half = Math.floor(data.length / 2);\n    var firstHalf = data.slice(0, half);\n    var secondHalf = data.slice(half);\n    var firstAvg = (firstHalf.reduce(function (a, b) {\n      return a + b.hours;\n    }, 0) / firstHalf.length).toFixed(1);\n    var secondAvg = (secondHalf.reduce(function (a, b) {\n      return a + b.hours;\n    }, 0) / secondHalf.length).toFixed(1);\n    pieData = [{\n      name: \"First Half\",\n      value: parseFloat(firstAvg)\n    }, {\n      name: \"Second Half\",\n      value: parseFloat(secondAvg)\n    }];\n  }\n  var COLORS = [\"#60a5fa\", \"#f59e0b\"];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"\\u2600\\uFE0F Sunshine Tracker\"\n      }), _jsxs(View, {\n        style: styles.chartCard,\n        children: [_jsx(Text, {\n          style: styles.chartTitle,\n          children: \"Daily Sunshine Trends\"\n        }), _jsx(View, {\n          style: {\n            width: \"100%\",\n            height: 300\n          },\n          children: _jsx(ResponsiveContainer, {\n            children: _jsxs(LineChart, {\n              data: data,\n              children: [_jsx(CartesianGrid, {\n                stroke: \"#e5e7eb\"\n              }), _jsx(XAxis, {\n                dataKey: \"date\"\n              }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, {\n                type: \"monotone\",\n                dataKey: \"hours\",\n                stroke: \"#f59e0b\",\n                strokeWidth: 2\n              })]\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.insightsRow,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.avgCard],\n          children: [_jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Average\"\n          }), _jsxs(Text, {\n            style: [styles.cardValue, {\n              color: \"#b45309\"\n            }],\n            children: [avg, \"h\"]\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.maxCard],\n          children: [_jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Max\"\n          }), _jsxs(Text, {\n            style: [styles.cardValue, {\n              color: \"#065f46\"\n            }],\n            children: [max, \"h\"]\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.minCard],\n          children: [_jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Min\"\n          }), _jsxs(Text, {\n            style: [styles.cardValue, {\n              color: \"#b91c1c\"\n            }],\n            children: [min, \"h\"]\n          })]\n        })]\n      }), pieData.length > 0 && _jsxs(View, {\n        style: styles.pieCard,\n        children: [_jsx(Text, {\n          style: styles.pieTitle,\n          children: \"Historical Comparison\"\n        }), _jsx(View, {\n          style: {\n            width: \"100%\",\n            height: 300\n          },\n          children: _jsx(ResponsiveContainer, {\n            children: _jsxs(PieChart, {\n              children: [_jsx(Pie, {\n                data: pieData,\n                dataKey: \"value\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                label: true,\n                children: pieData.map(function (entry, index) {\n                  return _jsx(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, \"cell-\" + index);\n                })\n              }), _jsx(Tooltip, {}), _jsx(Legend, {})]\n            })\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","Text","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Cell","Legend","styles","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","data","setData","fetch","then","res","json","sunshine","catch","err","console","log","avg","length","reduce","a","b","hours","toFixed","max","Math","apply","_toConsumableArray","map","d","min","pieData","half","floor","firstHalf","slice","secondHalf","firstAvg","secondAvg","name","value","parseFloat","COLORS","style","container","children","wrapper","title","chartCard","chartTitle","width","height","stroke","dataKey","type","strokeWidth","insightsRow","card","avgCard","cardLabel","cardValue","color","maxCard","minCard","pieCard","pieTitle","cx","cy","outerRadius","label","entry","index","fill"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  PieChart,\n  Pie,\n  Cell,\n  Legend,\n} from \"recharts\";\n\nimport styles from \"./styles\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/sunshine\")\n      .then((res) => res.json())\n      .then((json) => setData(json.sunshine))\n      .catch((err) => console.log(\"Fetch error:\", err));\n  }, []);\n\n  // ---- Insights ----\n  const avg = data.length\n    ? (data.reduce((a, b) => a + b.hours, 0) / data.length).toFixed(1)\n    : 0;\n  const max = data.length ? Math.max(...data.map((d) => d.hours)) : 0;\n  const min = data.length ? Math.min(...data.map((d) => d.hours)) : 0;\n\n  // ---- Historical trend (split into halves if less than 14 days) ----\n  let pieData = [];\n  if (data.length > 3) {\n    const half = Math.floor(data.length / 2);\n    const firstHalf = data.slice(0, half);\n    const secondHalf = data.slice(half);\n\n    const firstAvg = (\n      firstHalf.reduce((a, b) => a + b.hours, 0) / firstHalf.length\n    ).toFixed(1);\n    const secondAvg = (\n      secondHalf.reduce((a, b) => a + b.hours, 0) / secondHalf.length\n    ).toFixed(1);\n\n    pieData = [\n      { name: \"First Half\", value: parseFloat(firstAvg) },\n      { name: \"Second Half\", value: parseFloat(secondAvg) },\n    ];\n  }\n\n  const COLORS = [\"#60a5fa\", \"#f59e0b\"];\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        {/* Title */}\n        <Text style={styles.title}>☀️ Sunshine Tracker</Text>\n\n        {/* Line Chart */}\n        <View style={styles.chartCard}>\n          <Text style={styles.chartTitle}>Daily Sunshine Trends</Text>\n          <View style={{ width: \"100%\", height: 300 }}>\n            <ResponsiveContainer>\n              <LineChart data={data}>\n                <CartesianGrid stroke=\"#e5e7eb\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"hours\"\n                  stroke=\"#f59e0b\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </View>\n        </View>\n\n        {/* Insights */}\n        <View style={styles.insightsRow}>\n          <View style={[styles.card, styles.avgCard]}>\n            <Text style={styles.cardLabel}>Average</Text>\n            <Text style={[styles.cardValue, { color: \"#b45309\" }]}>{avg}h</Text>\n          </View>\n          <View style={[styles.card, styles.maxCard]}>\n            <Text style={styles.cardLabel}>Max</Text>\n            <Text style={[styles.cardValue, { color: \"#065f46\" }]}>{max}h</Text>\n          </View>\n          <View style={[styles.card, styles.minCard]}>\n            <Text style={styles.cardLabel}>Min</Text>\n            <Text style={[styles.cardValue, { color: \"#b91c1c\" }]}>{min}h</Text>\n          </View>\n        </View>\n\n        {/* Historical Trend Pie Chart */}\n        {pieData.length > 0 && (\n          <View style={styles.pieCard}>\n            <Text style={styles.pieTitle}>Historical Comparison</Text>\n            <View style={{ width: \"100%\", height: 300 }}>\n              <ResponsiveContainer>\n                <PieChart>\n                  <Pie\n                    data={pieData}\n                    dataKey=\"value\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                    label\n                  >\n                    {pieData.map((entry, index) => (\n                      <Cell\n                        key={`cell-${index}`}\n                        fill={COLORS[index % COLORS.length]}\n                      />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}