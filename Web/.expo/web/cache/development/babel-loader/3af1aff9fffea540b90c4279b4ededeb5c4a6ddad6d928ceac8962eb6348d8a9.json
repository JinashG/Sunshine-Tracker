{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/sunshine\").then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setData(json.sunshine);\n    }).catch(function (err) {\n      return console.log(\"Fetch error:\", err);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 12\n      },\n      children: \"Sunshine Duration (Web)\"\n    }), _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: 300\n      },\n      children: _jsx(ResponsiveContainer, {\n        children: _jsxs(LineChart, {\n          data: data,\n          children: [_jsx(CartesianGrid, {\n            stroke: \"#e5e7eb\"\n          }), _jsx(XAxis, {\n            dataKey: \"date\"\n          }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, {\n            type: \"monotone\",\n            dataKey: \"hours\",\n            stroke: \"#f59e0b\",\n            strokeWidth: 2\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","Text","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","data","setData","fetch","then","res","json","sunshine","catch","err","console","log","style","flex","padding","children","fontSize","marginBottom","width","height","stroke","dataKey","type","strokeWidth"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/App.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { View, Text, ScrollView, Dimensions, Platform } from \"react-native\";\n// import { LineChart as RNLineChart } from \"react-native-chart-kit\";\n// import styles from \"./styles\";\n\n// // Import recharts components only for web\n// let ReLineChart, ReLine, ReXAxis, ReYAxis, ReTooltip, ReCartesianGrid, ReResponsiveContainer;\n// if (Platform.OS === \"web\") {\n//   const Recharts = require(\"recharts\");\n//   ReLineChart = Recharts.LineChart;\n//   ReLine = Recharts.Line;\n//   ReXAxis = Recharts.XAxis;\n//   ReYAxis = Recharts.YAxis;\n//   ReTooltip = Recharts.Tooltip;\n//   ReCartesianGrid = Recharts.CartesianGrid;\n//   ReResponsiveContainer = Recharts.ResponsiveContainer;\n// }\n\n// export default function App() {\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:8000/sunshine\") // ⚠️ replace with your PC IP for phone testing\n//       .then((res) => res.json())\n//       .then((json) => setData(json.sunshine))\n//       .catch((err) => console.log(err));\n//   }, []);\n\n//   const avg = data.length ? (data.reduce((a, b) => a + b.hours, 0) / data.length).toFixed(1) : 0;\n//   const max = data.length ? Math.max(...data.map((d) => d.hours)) : 0;\n//   const min = data.length ? Math.min(...data.map((d) => d.hours)) : 0;\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       <Text style={styles.title}>Sunshine Duration</Text>\n\n//       {data.length > 0 ? (\n//         Platform.OS === \"web\" ? (\n//           <View style={{ height: 300, width: \"100%\" }}>\n//             <ReResponsiveContainer width=\"100%\" height=\"100%\">\n//               <ReLineChart data={data} margin={{ top: 20, right: 20, bottom: 20, left: 0 }}>\n//                 <ReCartesianGrid stroke=\"#e5e7eb\" />\n//                 <ReXAxis dataKey=\"date\" />\n//                 <ReYAxis />\n//                 <ReTooltip />\n//                 <ReLine type=\"monotone\" dataKey=\"hours\" stroke=\"#f59e0b\" strokeWidth={2} />\n//               </ReLineChart>\n//             </ReResponsiveContainer>\n//           </View>\n//         ) : (\n//           <RNLineChart\n//             data={{\n//               labels: data.map((d) => d.date.slice(5)),\n//               datasets: [{ data: data.map((d) => d.hours) }],\n//             }}\n//             width={Dimensions.get(\"window\").width - 32}\n//             height={220}\n//             yAxisSuffix=\"h\"\n//             chartConfig={{\n//               backgroundColor: \"#fff\",\n//               backgroundGradientFrom: \"#fff\",\n//               backgroundGradientTo: \"#fff\",\n//               decimalPlaces: 1,\n//               color: () => `#f59e0b`,\n//               labelColor: () => \"#64748B\",\n//             }}\n//             bezier\n//             style={styles.chart}\n//           />\n//         )\n//       ) : (\n//         <Text>Loading...</Text>\n//       )}\n\n//       <View style={styles.insights}>\n//         <Text style={styles.pill}>Avg: {avg}h</Text>\n//         <Text style={styles.pill}>Max: {max}h</Text>\n//         <Text style={styles.pill}>Min: {min}h</Text>\n//       </View>\n//     </ScrollView>\n//   );\n// }\nimport { useEffect, useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from \"recharts\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/sunshine\")\n      .then((res) => res.json())\n      .then((json) => setData(json.sunshine))\n      .catch((err) => console.log(\"Fetch error:\", err));\n  }, []);\n\n  return (\n    <View style={{ flex: 1, padding: 20 }}>\n      <Text style={{ fontSize: 24, marginBottom: 12 }}>Sunshine Duration (Web)</Text>\n\n      <View style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart data={data}>\n            <CartesianGrid stroke=\"#e5e7eb\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"hours\" stroke=\"#f59e0b\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      </View>\n    </View>\n  );\n}\n"],"mappings":";AAkFA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SACEC,mBAAmB,EACnBC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,QACF,UAAU;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAElB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBjB,SAAS,CAAC,YAAM;IACdqB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACzBF,IAAI,CAAC,UAACE,IAAI;MAAA,OAAKJ,OAAO,CAACI,IAAI,CAACC,QAAQ,CAAC;IAAA,EAAC,CACtCC,KAAK,CAAC,UAACC,GAAG;MAAA,OAAKC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAAA,EAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,OACEb,KAAA,CAACZ,IAAI;IAAC4B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GACpCrB,IAAA,CAACT,IAAI;MAAC2B,KAAK,EAAE;QAAEI,QAAQ,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAuB,CAAM,CAAC,EAE/ErB,IAAA,CAACV,IAAI;MAAC4B,KAAK,EAAE;QAAEM,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAI,CAAE;MAAAJ,QAAA,EAC1CrB,IAAA,CAACR,mBAAmB;QAAA6B,QAAA,EAClBnB,KAAA,CAACT,SAAS;UAACc,IAAI,EAAEA,IAAK;UAAAc,QAAA,GACpBrB,IAAA,CAACH,aAAa;YAAC6B,MAAM,EAAC;UAAS,CAAE,CAAC,EAClC1B,IAAA,CAACL,KAAK;YAACgC,OAAO,EAAC;UAAM,CAAE,CAAC,EACxB3B,IAAA,CAACJ,KAAK,IAAE,CAAC,EACTI,IAAA,CAACF,OAAO,IAAE,CAAC,EACXE,IAAA,CAACN,IAAI;YAACkC,IAAI,EAAC,UAAU;YAACD,OAAO,EAAC,OAAO;YAACD,MAAM,EAAC,SAAS;YAACG,WAAW,EAAE;UAAE,CAAE,CAAC;QAAA,CAChE;MAAC,CACO;IAAC,CAClB,CAAC;EAAA,CACH,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}