{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { fetchSunlightData } from \"../utils/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    sunlightData = _useState2[0],\n    setSunlightData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var getSunlightData = function getSunlightData() {\n      var data, _t;\n      return _regeneratorRuntime.async(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 1;\n            return _regeneratorRuntime.awrap(fetchSunlightData());\n          case 1:\n            data = _context.sent;\n            setSunlightData(data);\n            _context.next = 3;\n            break;\n          case 2:\n            _context.prev = 2;\n            _t = _context[\"catch\"](0);\n            console.error(\"Error fetching sunlight data:\", _t);\n          case 3:\n            _context.prev = 3;\n            setLoading(false);\n            return _context.finish(3);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 2, 3, 4]], Promise);\n    };\n    getSunlightData();\n  }, []);\n  if (loading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sunshine Tracker\"\n    }), sunlightData ? _jsxs(Text, {\n      style: styles.data,\n      children: [\"Today's Sunlight Duration: \", sunlightData.duration, \" hours\"]\n    }) : _jsx(Text, {\n      children: \"No sunlight data available.\"\n    }), _jsx(Button, {\n      title: \"Compare Sunlight Data\",\n      onPress: function onPress() {\n        return navigation.navigate('Compare');\n      }\n    }), _jsx(Button, {\n      title: \"View History\",\n      onPress: function onPress() {\n        return navigation.navigate('History');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  data: {\n    fontSize: 18,\n    marginVertical: 16\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","StyleSheet","fetchSunlightData","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","sunlightData","setSunlightData","_useState3","_useState4","loading","setLoading","getSunlightData","data","_t","_regeneratorRuntime","async","_context","prev","next","awrap","sent","console","error","finish","stop","Promise","style","styles","container","children","title","duration","onPress","navigate","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginVertical"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/screens/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { fetchSunlightData } from '../utils/api';\n\nconst HomeScreen = ({ navigation }) => {\n  const [sunlightData, setSunlightData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getSunlightData = async () => {\n      try {\n        const data = await fetchSunlightData();\n        setSunlightData(data);\n      } catch (error) {\n        console.error(\"Error fetching sunlight data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSunlightData();\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Sunshine Tracker</Text>\n      {sunlightData ? (\n        <Text style={styles.data}>\n          Today's Sunlight Duration: {sunlightData.duration} hours\n        </Text>\n      ) : (\n        <Text>No sunlight data available.</Text>\n      )}\n      <Button\n        title=\"Compare Sunlight Data\"\n        onPress={() => navigation.navigate('Compare')}\n      />\n      <Button\n        title=\"View History\"\n        onPress={() => navigation.navigate('History')}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  data: {\n    fontSize: 18,\n    marginVertical: 16,\n  },\n});\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}