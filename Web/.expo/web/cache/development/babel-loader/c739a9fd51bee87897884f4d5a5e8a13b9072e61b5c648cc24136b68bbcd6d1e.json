{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { fetchSunlightData } from \"../utils/api\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar CompareScreen = function CompareScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    sunlightData = _useState2[0],\n    setSunlightData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var getSunlightData = function getSunlightData() {\n      var data, _t;\n      return _regeneratorRuntime.async(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 1;\n            return _regeneratorRuntime.awrap(fetchSunlightData());\n          case 1:\n            data = _context.sent;\n            setSunlightData(data);\n            _context.next = 3;\n            break;\n          case 2:\n            _context.prev = 2;\n            _t = _context[\"catch\"](0);\n            console.error(\"Error fetching sunlight data:\", _t);\n          case 3:\n            _context.prev = 3;\n            setLoading(false);\n            return _context.finish(3);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 2, 3, 4]], Promise);\n    };\n    getSunlightData();\n  }, []);\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        children: [item.date, \": \", item.duration, \" hours\"]\n      })\n    });\n  };\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Compare Sunlight Duration\"\n    }), _jsx(FlatList, {\n      data: sunlightData,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.date;\n      }\n    }), _jsx(Button, {\n      title: \"Refresh Data\",\n      onPress: function onPress() {\n        return getSunlightData();\n      }\n    })]\n  });\n};\nexport default CompareScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","FlatList","fetchSunlightData","jsxs","_jsxs","jsx","_jsx","CompareScreen","_useState","_useState2","_slicedToArray","sunlightData","setSunlightData","_useState3","_useState4","loading","setLoading","getSunlightData","data","_t","_regeneratorRuntime","async","_context","prev","next","awrap","sent","console","error","finish","stop","Promise","renderItem","_ref","item","children","date","duration","keyExtractor","title","onPress"],"sources":["D:/Programming/Web projects/Sunshine-Tracker/mobile/screens/CompareScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, Button, FlatList } from 'react-native';\nimport { fetchSunlightData } from '../utils/api';\n\nconst CompareScreen = () => {\n  const [sunlightData, setSunlightData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getSunlightData = async () => {\n      try {\n        const data = await fetchSunlightData();\n        setSunlightData(data);\n      } catch (error) {\n        console.error(\"Error fetching sunlight data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSunlightData();\n  }, []);\n\n  const renderItem = ({ item }) => (\n    <View>\n      <Text>{item.date}: {item.duration} hours</Text>\n    </View>\n  );\n\n  if (loading) {\n    return <Text>Loading...</Text>;\n  }\n\n  return (\n    <View>\n      <Text>Compare Sunlight Duration</Text>\n      <FlatList\n        data={sunlightData}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.date}\n      />\n      <Button title=\"Refresh Data\" onPress={() => getSunlightData()} />\n    </View>\n  );\n};\n\nexport default CompareScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAEnD,SAASC,iBAAiB;AAAuB,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAEjD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAAwCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA8BhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BlB,SAAS,CAAC,YAAM;IACd,IAAMqB,eAAe,GAAG,SAAlBA,eAAeA,CAAA;MAAA,IAAAC,IAAA,EAAAC,EAAA;MAAA,OAAAC,mBAAA,CAAAC,KAAA,WAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAAAJ,mBAAA,CAAAK,KAAA,CAEEvB,iBAAiB,CAAC,CAAC;UAAA;YAAhCgB,IAAI,GAAAI,QAAA,CAAAI,IAAA;YACVd,eAAe,CAACM,IAAI,CAAC;YAACI,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAJ,EAAA,GAAAG,QAAA;YAEtBK,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAAT,EAAO,CAAC;UAAC;YAAAG,QAAA,CAAAC,IAAA;YAEtDP,UAAU,CAAC,KAAK,CAAC;YAAC,OAAAM,QAAA,CAAAO,MAAA;UAAA;UAAA;YAAA,OAAAP,QAAA,CAAAQ,IAAA;QAAA;MAAA,+BAAAC,OAAA;IAAA,CAErB;IAEDd,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMe,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA;IAAA,IAAMC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAA,OACxB5B,IAAA,CAACR,IAAI;MAAAqC,QAAA,EACH/B,KAAA,CAACL,IAAI;QAAAoC,QAAA,GAAED,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,QAAQ,EAAC,QAAM;MAAA,CAAM;IAAC,CAC3C,CAAC;EAAA,CACR;EAED,IAAItB,OAAO,EAAE;IACX,OAAOT,IAAA,CAACP,IAAI;MAAAoC,QAAA,EAAC;IAAU,CAAM,CAAC;EAChC;EAEA,OACE/B,KAAA,CAACN,IAAI;IAAAqC,QAAA,GACH7B,IAAA,CAACP,IAAI;MAAAoC,QAAA,EAAC;IAAyB,CAAM,CAAC,EACtC7B,IAAA,CAACL,QAAQ;MACPiB,IAAI,EAAEP,YAAa;MACnBqB,UAAU,EAAEA,UAAW;MACvBM,YAAY,EAAE,SAAdA,YAAYA,CAAGJ,IAAI;QAAA,OAAKA,IAAI,CAACE,IAAI;MAAA;IAAC,CACnC,CAAC,EACF9B,IAAA,CAACN,MAAM;MAACuC,KAAK,EAAC,cAAc;MAACC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQvB,eAAe,CAAC,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CAC7D,CAAC;AAEX,CAAC;AAED,eAAeV,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}