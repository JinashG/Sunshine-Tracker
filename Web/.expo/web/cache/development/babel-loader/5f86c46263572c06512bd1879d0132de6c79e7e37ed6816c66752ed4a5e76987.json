{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport { useEffect } from 'react';\nimport ExpoKeepAwake from \"./ExpoKeepAwake\";\nexport var ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\nexport function isAvailableAsync() {\n  return _regeneratorRuntime.async(function (_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (!ExpoKeepAwake.isAvailableAsync) {\n          _context.next = 2;\n          break;\n        }\n        _context.next = 1;\n        return _regeneratorRuntime.awrap(ExpoKeepAwake.isAvailableAsync());\n      case 1:\n        return _context.abrupt(\"return\", _context.sent);\n      case 2:\n        return _context.abrupt(\"return\", true);\n      case 3:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function useKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  var options = arguments.length > 1 ? arguments[1] : undefined;\n  useEffect(function () {\n    var isMounted = true;\n    activateKeepAwakeAsync(tag).then(function () {\n      if (isMounted && ExpoKeepAwake.addListenerForTag && options != null && options.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return function () {\n      isMounted = false;\n      if (options != null && options.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag).catch(function () {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\nexport function activateKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\nexport function activateKeepAwakeAsync() {\n  var tag,\n    _args2 = arguments;\n  return _regeneratorRuntime.async(function (_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        tag = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : ExpoKeepAwakeTag;\n        _context2.next = 1;\n        return _regeneratorRuntime.awrap(ExpoKeepAwake.activate == null ? void 0 : ExpoKeepAwake.activate(tag));\n      case 1:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function deactivateKeepAwake() {\n  var tag,\n    _args3 = arguments;\n  return _regeneratorRuntime.async(function (_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        tag = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : ExpoKeepAwakeTag;\n        _context3.next = 1;\n        return _regeneratorRuntime.awrap(ExpoKeepAwake.deactivate == null ? void 0 : ExpoKeepAwake.deactivate(tag));\n      case 1:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function addListener(tagOrListener, listener) {\n  if (!ExpoKeepAwake.addListenerForTag) {\n    throw new UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n  var tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  var _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n  return ExpoKeepAwake.addListenerForTag(tag, _listener);\n}\nexport * from \"./KeepAwake.types\";","map":{"version":3,"names":["UnavailabilityError","useEffect","ExpoKeepAwake","ExpoKeepAwakeTag","isAvailableAsync","_regeneratorRuntime","async","_context","prev","next","awrap","abrupt","sent","stop","Promise","useKeepAwake","tag","arguments","length","undefined","options","isMounted","activateKeepAwakeAsync","then","addListenerForTag","listener","addListener","suppressDeactivateWarnings","deactivateKeepAwake","catch","activateKeepAwake","console","warn","_args2","_context2","activate","_args3","_context3","deactivate","tagOrListener","_listener"],"sources":["d:\\Programming\\Web projects\\Sunshine-Tracker\\Web\\node_modules\\expo-keep-awake\\src\\index.ts"],"sourcesContent":["import { Subscription, UnavailabilityError } from 'expo-modules-core';\nimport { useEffect } from 'react';\n\nimport ExpoKeepAwake from './ExpoKeepAwake';\nimport { KeepAwakeListener, KeepAwakeOptions } from './KeepAwake.types';\n\n/** Default tag, used when no tag has been specified in keep awake method calls. */\nexport const ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\n\n/** @returns `true` on all platforms except [unsupported web browsers](https://caniuse.com/wake-lock). */\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (ExpoKeepAwake.isAvailableAsync) {\n    return await ExpoKeepAwake.isAvailableAsync();\n  }\n  return true;\n}\n\n/**\n * A React hook to keep the screen awake for as long as the owner component is mounted.\n * The optionally provided `tag` argument is used when activating and deactivating the keep-awake\n * feature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwakeAsync`\n * below to learn more about the `tag` argument.\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @param options Additional options for the keep awake hook.\n */\nexport function useKeepAwake(tag: string = ExpoKeepAwakeTag, options?: KeepAwakeOptions): void {\n  useEffect(() => {\n    let isMounted = true;\n    activateKeepAwakeAsync(tag).then(() => {\n      if (isMounted && ExpoKeepAwake.addListenerForTag && options?.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return () => {\n      isMounted = false;\n      if (options?.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag).catch(() => {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @deprecated use `activateKeepAwakeAsync` instead.\n */\nexport function activateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n */\nexport async function activateKeepAwakeAsync(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.activate?.(tag);\n}\n\n// @needsAudit\n/**\n * Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\n * is unspecified, it defaults to the same default tag that `activateKeepAwake` uses.\n *\n * @param tag Tag to release the lock on screen sleep prevention. If not provided,\n * the default tag is used.\n */\nexport async function deactivateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.deactivate?.(tag);\n}\n\n/**\n * Observe changes to the keep awake timer.\n * On web, this changes when navigating away from the active window/tab. No-op on native.\n * @platform web\n *\n * @example\n * ```ts\n * KeepAwake.addListener(({ state }) => {\n *   // ...\n * });\n * ```\n */\nexport function addListener(\n  tagOrListener: string | KeepAwakeListener,\n  listener?: KeepAwakeListener\n): Subscription {\n  // Assert so the type is non-nullable.\n  if (!ExpoKeepAwake.addListenerForTag) {\n    throw new UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n\n  const tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  const _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n\n  return ExpoKeepAwake.addListenerForTag(tag, _listener);\n}\n\nexport * from './KeepAwake.types';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}